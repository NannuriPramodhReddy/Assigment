import React, { useState, useEffect } from 'react';
import { getScanResult } from '../services/api';
import styles from './ScanResultDetail.module.css';

const ScanResultDetail = ({ scanId }) => {
    const [scanResult, setScanResult] = useState(null);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        const fetchScanResult = async () => {
            setLoading(true);
            try {
                const response = await getScanResult(scanId);
                setScanResult(response.data);
            } catch (error) {
                console.error('Error fetching scan result:', error);
            }
            setLoading(false);
        };

        fetchScanResult();
    }, [scanId]);

    if (loading) return <div className={styles.loadingText}>Loading scan details...</div>;
    if (!scanResult) return <div className={styles.loadingText}>No scan results available</div>;

    const getSeverityClass = (severity) => {
        switch (severity.toLowerCase()) {
            case 'critical': return styles.critical;
            case 'high': return styles.high;
            case 'medium': return styles.medium;
            case 'low': return styles.low;
            default: return '';
        }
    };

    return (
        <div className={styles.detailContainer}>
            <h3 className={styles.header}>Scan Result Details</h3>
            
            <div className={styles.metaData}>
                <div className={styles.metaItem}>
                    <div className={styles.metaLabel}>Status</div>
                    <div className={styles.metaValue}>{scanResult.status}</div>
                </div>
                <div className={styles.metaItem}>
                    <div className={styles.metaLabel}>Critical</div>
                    <div className={styles.metaValue}>{scanResult.criticalCount}</div>
                </div>
                <div className={styles.metaItem}>
                    <div className={styles.metaLabel}>High</div>
                    <div className={styles.metaValue}>{scanResult.highCount}</div>
                </div>
                <div className={styles.metaItem}>
                    <div className={styles.metaLabel}>Medium</div>
                    <div className={styles.metaValue}>{scanResult.mediumCount}</div>
                </div>
                <div className={styles.metaItem}>
                    <div className={styles.metaLabel}>Low</div>
                    <div className={styles.metaValue}>{scanResult.lowCount}</div>
                </div>
            </div>

            <h4 className={styles.vulnerabilityHeader}>Vulnerabilities</h4>
            <ul className={styles.vulnerabilityList}>
                {scanResult.vulnerabilities?.length > 0 ? (
                    scanResult.vulnerabilities.map(vuln => (
                        <li 
                            key={vuln.id} 
                            className={`${styles.vulnerabilityItem} ${getSeverityClass(vuln.severity)}`}
                        >
                            <div className={styles.severity}>{vuln.severity}</div>
                            <div className={styles.description}>{vuln.description}</div>
                            <div className={styles.packageInfo}>
                                Package: {vuln.affectedPackage} | Version: {vuln.affectedVersion}
                            </div>
                        </li>
                    ))
                ) : (
                    <div className={styles.loadingText}>No vulnerabilities found</div>
                )}
            </ul>
        </div>
    );
};

export default ScanResultDetail;